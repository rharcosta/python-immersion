# -*- coding: utf-8 -*-
"""Candlestick.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KNHAUOk0lUQTZ4mn_2v-KX9zDtzAFlT5

# Installing some libraries
"""

!pip install mplfinance

!pip install yfinance

"""# Importing libraries"""

#pip install mplfinance
#pip install yfinance
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import mplfinance as mpf
import yfinance as yf
import plotly.graph_objects as go
from plotly.subplots import make_subplots

"""# Importing Petrobras shares"""

data = yf.download('PETR4.SA', start = '2023-01-01', end = '2023-12-12')
data

"""# Changing columns name"""

data.columns = ['Open', 'Max', 'Min', 'Close', 'Adj_Close', 'Volume']
#data = data.rename_axis('Date') -> changes the name of the X axis
data

"""# Price variation by date - Graphic"""

data['Close'].plot(figsize = (10,6))
plt.title('Price variation by date', fontsize = 16)
plt.legend(['Close'])

"""# Candlestick chart"""

df = data.head(60).copy() #taking only the first 60 lines
df['Date'] = df.index #creation of a new column that takes the index Date
df['Date'] = df['Date'].apply(mdates.date2num) #converting the dates to numbers
df

#blank frame
fig, ax = plt.subplots(figsize = (15, 8))

#candlestick width
width = 0.7

#creating candlesticks. It will repeat from 0 to 59 (size)
for i in range(len(df)):
  #if close is bigger than open, the candlestick will be green, else color is red
  if df['Close'].iloc[i] > df['Open'].iloc[i]:
    color = 'green'
  else:
    color = 'red'

  #creating the lines above candlesticks
  #defining X and Y axes
  ax.plot([df['Date'].iloc[i], df['Date'].iloc[i]],
          [df['Min'].iloc[i], df['Max'].iloc[i]],
          color = color,
          linewidth = 1)

  #creating rectangles
                             #defining the width. width/2 = centralizing the rectangle
  ax.add_patch(plt.Rectangle((df['Date'].iloc[i] - width/2, min(df['Open'].iloc[i], df['Close'].iloc[i])),
                             width,
                             #definig the height
                             abs(df['Close'].iloc[i] - df['Open'].iloc[i]),  #abs: value always positive, absolute
                             #defining the color
                             facecolor = color))

#defining periods of moving average
df['MA7'] = df['Close'].rolling(window = 7).mean()
df['MA14'] = df['Close'].rolling(window = 14).mean()

#adding moving averages
ax.plot(df['Date'], df['MA7'], color = 'orange', label = 'Moving Average 7 days')
ax.plot(df['Date'], df['MA14'], color = 'yellow', label = 'Moving Average 14 days')

#showing the subtitles
ax.legend()

#dates are being used in X axis
ax.xaxis_date()
#formatting the X axis to show the Date
ax.xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))
plt.xticks(rotation = 45)

#adding title and labels
plt.title('Canclestick Graphic - PETR4')
plt.xlabel('Date')
plt.ylabel('Price')

#adding a checkerboard grid
plt.grid(True)

#showing the graphic
plt.show()

"""# Transforming the graph into interactive"""

fig = make_subplots(rows = 2, cols = 1, shared_xaxes = True,
                    vertical_spacing = 0.1,
                    subplot_titles = ('Candlesticks', 'Volume Traded'),
                    row_width = [0.2, 0.7])

#adding the candlestick graphic
fig.add_trace(go.Candlestick(x = df.index,
                             open = df['Open'],
                             high = df['Max'],
                             low = df['Min'],
                             close = df['Close'],
                             name = 'Candlestick'),
                             row = 1, col = 1)

#adding moving averages
fig.add_trace(go.Scatter(x = df.index,
                         y = df['MA7'],
                         mode = 'lines',
                         name = 'MA7 - Moving Average of 7 days'),
                         row = 1, col = 1)

fig.add_trace(go.Scatter(x = df.index,
                         y = df['MA14'],
                         mode = 'lines',
                         name = 'MA14 - Moving Average of 14 days'),
                         row = 1, col = 1)

#adding bar chart for volume
fig.add_trace(go.Bar(x = df.index,
              y = df['Volume'],
              name = 'Volume'),
              row = 2, col = 1)

#updating the layout
fig.update_layout(yaxis_title = 'Price',
                  xaxis_rangeslider_visible = False,
                  width = 1100, height = 600)

#showing the graphic
fig.show()

"""# Graphic in one line"""

data = yf.download('PETR4.SA', start = '2023-01-01', end = '2023-12-12')

#showing the first 30 data; figsize = size; mav = moving averages; style = color
mpf.plot(data.head(30), type = 'candle', figsize = (16,18), volume = True, mav = (7, 14), style = 'brasil')