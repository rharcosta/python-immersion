# -*- coding: utf-8 -*-
"""Graphics_DataManipulation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1izhlrZnFGn_CudOoNp5msiVAipztG5Ix

# Importing libraries
"""

import pandas as pd
import plotly.express as px

"""# Defining variables"""

df_main = pd.read_excel("/content/Action Table.xlsx", sheet_name = "Main")
df_main.head(10) #shows the 10 first lines of the sheet 'Main'

df_total = pd.read_excel("/content/Action Table.xlsx", sheet_name = "Total")
df_total #shows the sheet 'Total'

df_ticker = pd.read_excel("/content/Action Table.xlsx", sheet_name = "Ticker")
df_ticker #shows the sheet 'Ticker'

df_chatgpt = pd.read_excel("/content/Action Table.xlsx", sheet_name = "ChatGPT")
df_chatgpt #shows the sheet 'ChatGPT'

"""# Copying the columns"""

df_main = df_main[['Asset',	'Date',	'Final Value (R$)',	'Var. Day (%)']].copy()
df_main

"""# Renaming the columns"""

df_main = df_main.rename(columns={'Final Value (R$)':'Final_Value',	'Var. Day (%)':'Var_Day_Pct'}).copy()
df_main

df_main['Variation_Pct'] = df_main['Var_Day_Pct'] / 100
df_main['Inicial_Value'] = df_main['Final_Value'] / (df_main['Variation_Pct'] + 1)
df_main

"""# Searching information from another sheet (VLOOKUP/PROCV = Merge)"""

df_main = df_main.merge(df_total, left_on = 'Asset', right_on = 'Code', how = 'left') #the column Code will merge with the column Asset, the main table is the left (Asset)
df_main

df_main = df_main.drop(columns = {'Code'}) #deleting the column Code
df_main = df_main.rename(columns = {'Theoretical Quantity':'Theoretical_Quantity'}).copy()
df_main

"""# Creating the column variation"""

df_main['Variation'] = (df_main['Final_Value'] - df_main['Inicial_Value']) * df_main['Theoretical_Quantity']
df_main

"""# Formating values"""

pd.options.display.float_format = '{:.2f}'.format
df_main

"""# Transforming the column to INT"""

df_main['Theoretical_Quantity'] = df_main['Theoretical_Quantity'].astype(int)
df_main

"""# Result (went up, went down or kept)"""

#if x > 0 = Went up; else x < 0 = Went down; else = Kept
df_main['Result'] = df_main['Variation'].apply(lambda x: 'Went up' if x > 0 else ('Went down' if x < 0 else 'Kept'))
df_main

"""# Searching the name of the company"""

df_main = df_main.merge(df_ticker, left_on = 'Asset', right_on = 'Ticker', how = 'left')
df_main = df_main.drop(columns = {'Ticker'})
df_main

"""# Searching the segment and the age of the company"""

df_main = df_main.merge(df_chatgpt, left_on = 'Name', right_on = 'Company', how = 'left')
df_main = df_main.drop(columns = {'Company'})
df_main

"""# Age (Greater than 100 years; Less than 50 years; Between 50 and 100 years)"""

# if x > 100 = Greater than 100 years; else x < 50 = Less than 50 years; else = Between 50 and 100 years
df_main['Age_Cat'] = df_main['Age'].apply(lambda x: 'Greater than 100 years' if x > 100 else ('Less than 50 years' if x < 50 else 'Between 50 and 100 years'))
df_main

"""# Max, Min, Mean"""

bigger = df_main['Variation'].max()
smaller = df_main['Variation'].min()
average = df_main['Variation'].mean()

#average of those who went up
average_up = df_main[df_main['Result'] == 'Went up']['Variation'].mean()
#average of those who went down
average_down = df_main[df_main['Result'] == 'Went down']['Variation'].mean()

#printing the results
print(f"Bigger\t R$ {bigger:,.2f}")
print(f"Smaller\t R$ {smaller:,.2f}")
print(f"Average\t R$ {average:,.2f}")
print(f"Went up average\t R$ {average_up:,.2f}")
print(f"Went down average\t R$ {average_down:,.2f}")

"""# Segmentation that went down"""

df_segment_wentup = df_main[df_main['Result'] == 'Went up']
df_segment_wentup

df_segments = df_segment_wentup.groupby('Segment')['Variation'].sum().reset_index()
df_segments

"""# Result - Variation"""

df_result = df_main.groupby('Result')['Variation'].sum().reset_index()
df_result

"""# Analysis per age group"""

df_age_group = df_main.groupby('Age_Cat')['Variation'].sum().reset_index()
df_age_group

df_age_group = df_main.groupby('Age_Cat')['Variation'].nunique().reset_index()
df_age_group.columns = ['Age_Cat', 'Quantity_of_Companies']
df_age_group

"""# Graphics"""

#creating the bar graphic
fig = px.bar(df_result, x = 'Result', y = 'Variation', text = 'Variation', title = 'Variation per Result')

#updating text formatting
fig.update_traces(texttemplate='%{text:.2f}', textposition='outside')

#customizing the chart layout
fig.update_layout(yaxis=dict(title='Variation'), xaxis=dict(title='Result'))
fig.show()

pizza = px.pie(df_segments, names = 'Segment', values = 'Variation', title = 'Variations that Rose')
pizza.show()